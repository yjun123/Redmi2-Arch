From 38ca33dd1daafdfa0aedb91e2ea66bc84f2dc8d6 Mon Sep 17 00:00:00 2001
From: ArenM <aren@peacevolution.org>
Date: Mon, 9 May 2022 13:45:00 -0400
Subject: [PATCH sxmo-utils 4/5] revert proximity lock to the old polling
 version

The iio_event_monitor program is part of linux-tools, but isn't packaged
on arch, I want to avoid having to fork that package, so revert this for
now.
---
 .../sxmo_hook_proximitylock.sh                | 69 +++++++------------
 1 file changed, 23 insertions(+), 46 deletions(-)

diff --git a/configs/default_hooks/three_button_touchscreen/sxmo_hook_proximitylock.sh b/configs/default_hooks/three_button_touchscreen/sxmo_hook_proximitylock.sh
index 14299f8..8688a23 100755
--- a/configs/default_hooks/three_button_touchscreen/sxmo_hook_proximitylock.sh
+++ b/configs/default_hooks/three_button_touchscreen/sxmo_hook_proximitylock.sh
@@ -2,28 +2,15 @@
 # SPDX-License-Identifier: AGPL-3.0-only
 # Copyright 2022 Sxmo Contributors
 
-# include common definitions
-# shellcheck source=scripts/core/sxmo_common.sh
-. sxmo_common.sh
-
 # This hook enables the proximity lock.
 
-finish() {
-	kill "$EVENTMONITORPID"
-	kill "$AWKPID"
-	rm "$tmp"
-
-	if ! grep -q "$INITIALSTATE" "$SXMO_STATE"; then
-		sxmo_hook_"$INITIALSTATE".sh
-	fi
-
-	# De-activate thresholds
-	printf 0 > "$prox_path/events/in_proximity_thresh_falling_value"
-	# The in_proximity_scale affects the maximum threshold value
-	# (see static const int stk3310_ps_max[4])
-	printf 6553 > "$prox_path/events/in_proximity_thresh_rising_value"
+isLocked() {
+	! grep -q unlock "$SXMO_STATE"
+}
 
+finish() {
 	sxmo_mutex.sh can_suspend free "Proximity lock is running"
+	sxmo_hook_"$INITIALSTATE".sh
 	exit 0
 }
 
@@ -32,33 +19,23 @@ trap 'finish' TERM INT
 
 sxmo_mutex.sh can_suspend lock "Proximity lock is running"
 
-# Permissions for these set by udev rules.
-prox_raw_bus="$(find /sys/devices/platform/soc -name 'in_proximity_raw' | head -n1)"
-prox_path="$(dirname "$prox_raw_bus")"
-prox_name="$(cat "$prox_path/name")" # e.g. stk3310
-
-printf "%d" "${SXMO_PROX_FALLING:-50}" > "$prox_path/events/in_proximity_thresh_falling_value"
-printf "%d" "${SXMO_PROX_RISING:-100}" > "$prox_path/events/in_proximity_thresh_rising_value"
-
-tmp="$(mktemp -u)"
-mkfifo "$tmp"
-
-# TODO: stdbuf not needed with linux-tools-iio >=5.17
-stdbuf -o L iio_event_monitor "$prox_name" >> "$tmp" &
-EVENTMONITORPID=$!
-
-awk '
-	/rising/{system("sxmo_hook_screenoff.sh")}
-	/falling/{system("sxmo_hook_unlock.sh")}
-' "$tmp" &
-AWKPID=$!
+proximity_raw_bus="$(find /sys/devices/platform/soc -name 'in_proximity_raw')"
+distance() {
+	cat "$proximity_raw_bus"
+}
 
-initial_distance="$(cat "$prox_raw_bus")"
-if [ "$initial_distance" -gt 50 ] && [ "$INITIALSTATE" != "screenoff" ]; then
-	sxmo_hook_screenoff.sh
-elif [ "$initial_distance" -lt 100 ] && [ "$INITIALSTATE" != "unlock" ]; then
-	sxmo_hook_unlock.sh
-fi
+TARGET=30
+
+mainloop() {
+	while true; do
+		distance="$(distance)"
+		if isLocked && [ "$distance" -lt "$TARGET" ]; then
+			sxmo_hook_unlock.sh
+		elif ! isLocked && [ "$distance" -gt "$TARGET" ]; then
+			sxmo_hook_screenoff.sh
+		fi
+		sleep 0.5
+	done
+}
 
-wait "$EVENTMONITORPID"
-wait "$AWKPID"
+mainloop
-- 
2.36.1

